{"ast":null,"code":"import _slicedToArray from\"C:/Users/D2105/Documents/Projects/React/association/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var Context=/*#__PURE__*/React.createContext({});export default function ContextProvider(_ref){var children=_ref.children;var _useState=useState(\"ar\"),_useState2=_slicedToArray(_useState,2),lang=_useState2[0],setLang=_useState2[1];//   useEffect(() => {\n//     const storedLang = JSON.parse(localStorage.getItem(\"lang\"))\n//     storedLang && setLang(storedLang)\n//   }, []);\n//   useEffect(() => {\n//     localStorage.setItem(\"lang\", JSON.stringify(lang))\n//   }, [lang]);\nreturn/*#__PURE__*/_jsx(Context.Provider,{value:{lang:lang,setLang:setLang},children:children});}","map":{"version":3,"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","lang","setLang"],"sources":["C:/Users/D2105/Documents/Projects/React/association/front-end/src/Context.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nexport const Context = React.createContext({});\r\n\r\nexport default function ContextProvider({ children }) {\r\n\r\n  const [ lang, setLang ] = useState(\"ar\");\r\n\r\n//   useEffect(() => {\r\n//     const storedLang = JSON.parse(localStorage.getItem(\"lang\"))\r\n//     storedLang && setLang(storedLang)\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     localStorage.setItem(\"lang\", JSON.stringify(lang))\r\n//   }, [lang]);\r\n\r\n  return (\r\n    <Context.Provider value={{ lang, setLang }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}"],"mappings":"mJAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,4CAElD,MAAO,IAAMC,QAAO,cAAGH,KAAK,CAACI,aAAa,CAAC,CAAC,CAAC,CAAC,CAE9C,cAAe,SAASC,gBAAe,MAAe,IAAZC,SAAQ,MAARA,QAAQ,CAEhD,cAA0BL,QAAQ,CAAC,IAAI,CAAC,wCAAhCM,IAAI,eAAEC,OAAO,eAEvB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEE,mBACE,KAAC,OAAO,CAAC,QAAQ,EAAC,KAAK,CAAE,CAAED,IAAI,CAAJA,IAAI,CAAEC,OAAO,CAAPA,OAAQ,CAAE,UACxCF,QAAQ,EACQ,CAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}